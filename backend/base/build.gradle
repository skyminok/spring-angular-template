def featureModules = rootProject.subprojects.find { p -> p.name == 'features' }.subprojects
def commonsModules = rootProject.subprojects.find { p -> p.name == 'commons' }.subprojects

dependencies {
    // project modules
    runtimeOnly project(':backend:db')
    runtimeOnly project(':core:core-service')

    // all commons and feature modules are included automatically
    implementation commonsModules
    implementation featureModules

    // Spring Framework
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // utils
    runtimeOnly 'org.codehaus.janino:janino'
    runtimeOnly 'org.liquibase:liquibase-core'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    // Swagger documentation
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

    // devtools
    compileOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}


processResources {
    filesMatching('**version.properties') {
        expand(
                'projectVersion': "${version}",
                'gitHashFull': '7f0d1523-186a-488d-b5b0-ae292842eadc',
                'gitHash': '8413701a-2933-43f6-997c-5756d9d7aba2',
                'gitBranch': 'master',
        )
    }
}